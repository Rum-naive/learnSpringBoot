<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.generator.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.generator.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_type" jdbcType="BIGINT" property="userType" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="manager_id" jdbcType="BIGINT" property="managerId" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_type, user_pwd, manager_id, login_time, user_name
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.generator.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.generator.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.example.demo.generator.User" useGeneratedKeys="true">
    insert into user (user_type, user_pwd, manager_id, 
      login_time, user_name)
    values (#{userType,jdbcType=BIGINT}, #{userPwd,jdbcType=VARCHAR}, #{managerId,jdbcType=BIGINT}, 
      #{loginTime,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.example.demo.generator.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userType != null">
        user_type,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="userName != null">
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userType != null">
        #{userType,jdbcType=BIGINT},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.generator.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=BIGINT},
      </if>
      <if test="record.userPwd != null">
        user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=BIGINT},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=BIGINT},
      user_pwd = #{record.userPwd,jdbcType=VARCHAR},
      manager_id = #{record.managerId,jdbcType=BIGINT},
      login_time = #{record.loginTime,jdbcType=TIMESTAMP},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.generator.User">
    update user
    <set>
      <if test="userType != null">
        user_type = #{userType,jdbcType=BIGINT},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.generator.User">
    update user
    set user_type = #{userType,jdbcType=BIGINT},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      manager_id = #{managerId,jdbcType=BIGINT},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      user_name = #{userName,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>